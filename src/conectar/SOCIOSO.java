/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package conectar;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;

import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author ivamar
 */
public class SOCIOSO extends javax.swing.JFrame {

    /**
     * Creates new form socios
     */
    public SOCIOSO() {
        initComponents();
    }

    public SOCIOSO(Connection con) {
        super();
        initComponents();
        setTitle("SOCIOS üíé");
        cargarDatos();
        // METODO PARA CLICAR EN LA FILA Y QUE SE AUTORELLENEN LOS CAMPOS
        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Obtener la fila seleccionada
                int filaSeleccionada = jTable1.getSelectedRow();

                // Verificar si se ha seleccionado una fila
                if (filaSeleccionada >= 0) {
                    // Obtener los valores de la fila seleccionada
                    String socioId = jTable1.getValueAt(filaSeleccionada, 0).toString();
                    String nombre = jTable1.getValueAt(filaSeleccionada, 1).toString();
                    String direccion = jTable1.getValueAt(filaSeleccionada, 2).toString();
                    String telefono = jTable1.getValueAt(filaSeleccionada, 3).toString();

                    // Establecer los valores en los campos de texto
                    jTextField1.setText(socioId);
                    jTextField2.setText(nombre);
                    jTextField3.setText(direccion);
                    jTextField4.setText(telefono);
                }
            }
        });
    }

    private void cargarDatos() {
        try {
            // Crear la conexi√≥n a la base de datos
            PruebaCOnectar pruebaConexion = new PruebaCOnectar();
            Connection con = pruebaConexion.getConexion();

            // Crear la sentencia SQL para obtener los datos de la tabla socios
            String sql = "SELECT * FROM socios";
            PreparedStatement pstmt = con.prepareStatement(sql);

            // Ejecutar la consulta y obtener el resultado
            ResultSet rs = pstmt.executeQuery();

            // Crear un objeto DefaultTableModel para almacenar los datos del ResultSet
            DefaultTableModel model = new DefaultTableModel();

            // Obtener los metadatos de las columnas
            ResultSetMetaData metaData = rs.getMetaData();

            // Obtener el n√∫mero de columnas
            int columnCount = metaData.getColumnCount();

            // Agregar los nombres de las columnas al modelo
            for (int i = 1; i <= columnCount; i++) {
                model.addColumn(metaData.getColumnName(i));
            }

            // Agregar los datos de las filas al modelo
            while (rs.next()) {
                Object[] rowData = new Object[columnCount];
                for (int i = 1; i <= columnCount; i++) {
                    rowData[i - 1] = rs.getObject(i);
                }
                model.addRow(rowData);
            }

            // Establecer el modelo en el jTable1
            jTable1.setModel(model);

            // Cerrar la conexi√≥n, el PreparedStatement y el ResultSet
            rs.close();
            pstmt.close();
            con.close();

        } catch (Exception e) {
            // Manejar cualquier error
            JOptionPane.showMessageDialog(this, "Error al insertar en la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        }
    }

    private void limpiarCampos() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        INSERTAR = new javax.swing.JButton();
        MODIFICAR = new javax.swing.JButton();
        ATRAS = new javax.swing.JButton();
        BORRAR = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Carlito", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(79, 99, 103));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/socios.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 12, -1, 57));

        jLabel2.setFont(new java.awt.Font("Carlito", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(79, 99, 103));
        jLabel2.setText("Socio ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 148, -1));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 151, -1));

        jLabel3.setFont(new java.awt.Font("Carlito", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(79, 99, 103));
        jLabel3.setText("Nombre");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Carlito", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(79, 99, 103));
        jLabel4.setText("Direcci√≥n");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 150, 30));

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 149, -1));

        jLabel5.setFont(new java.awt.Font("Carlito", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(79, 99, 103));
        jLabel5.setText("Tel√©fono");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        INSERTAR.setBackground(new java.awt.Color(204, 204, 204));
        INSERTAR.setFont(new java.awt.Font("Carlito", 1, 14)); // NOI18N
        INSERTAR.setForeground(new java.awt.Color(0, 0, 0));
        INSERTAR.setText("INSERTAR");
        INSERTAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INSERTARActionPerformed(evt);
            }
        });
        jPanel1.add(INSERTAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 149, -1));

        MODIFICAR.setBackground(new java.awt.Color(204, 204, 204));
        MODIFICAR.setFont(new java.awt.Font("Carlito", 1, 14)); // NOI18N
        MODIFICAR.setForeground(new java.awt.Color(0, 0, 0));
        MODIFICAR.setText("MODIFICAR ");
        MODIFICAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MODIFICARActionPerformed(evt);
            }
        });
        jPanel1.add(MODIFICAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        ATRAS.setBackground(new java.awt.Color(204, 204, 204));
        ATRAS.setFont(new java.awt.Font("Carlito", 1, 14)); // NOI18N
        ATRAS.setForeground(new java.awt.Color(0, 0, 0));
        ATRAS.setText("ATRAS");
        ATRAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ATRASActionPerformed(evt);
            }
        });
        jPanel1.add(ATRAS, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, -1, -1));

        BORRAR.setBackground(new java.awt.Color(204, 204, 204));
        BORRAR.setFont(new java.awt.Font("Carlito", 1, 14)); // NOI18N
        BORRAR.setForeground(new java.awt.Color(0, 0, 0));
        BORRAR.setText("BORRAR");
        BORRAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BORRARActionPerformed(evt);
            }
        });
        jPanel1.add(BORRAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 350, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 60, 566, 338));

        jLabel6.setFont(new java.awt.Font("Carlito", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Ponme un 10 Carmen <3");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 470, -1, -1));

        jLabel7.setFont(new java.awt.Font("Carlito", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Hecho por Iv√°n Torres Marcos");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 470, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/wow.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 971, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void INSERTARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INSERTARActionPerformed
        // TODO add your handling code here:
        // Obtener los valores de los campos de texto
        String socio_id = jTextField1.getText();
        String nombre = jTextField2.getText();
        String direccion = jTextField3.getText();
        String telefono = jTextField4.getText();

        // Crear la conexi√≥n a la base de datos
        PruebaCOnectar pruebaConexion = new PruebaCOnectar();
        Connection con = pruebaConexion.getConexion();

        try {
            // Crear la sentencia SQL de inserci√≥n
            String sql = "INSERT INTO socios (socio_id, nombre, direccion, telefono ) VALUES (?, ?, ?, ?)";
            PreparedStatement pstmt = con.prepareStatement(sql);

            // Establecer los valores de los par√°metros
            pstmt.setString(1, socio_id);
            pstmt.setString(2, nombre);
            pstmt.setString(3, direccion);
            pstmt.setString(4, telefono);

            // Ejecutar la sentencia de inserci√≥n
            pstmt.executeUpdate();

            // Cerrar la conexi√≥n y el PreparedStatement
            pstmt.close();
            con.close();

            // Mostrar mensaje de √©xito
            System.out.println("Inserci√≥n exitosa");

        } catch (Exception e) {
            // Manejar cualquier error
            JOptionPane.showMessageDialog(this, "Error al insertar en la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        }
        cargarDatos();
        limpiarCampos();

    }//GEN-LAST:event_INSERTARActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void MODIFICARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MODIFICARActionPerformed
        // TODO add your handling code here:
        String idSocio = jTextField1.getText();
        String nuevonombre = jTextField2.getText();
        String nuevodireccion = jTextField3.getText();
        String nuevotelefono = jTextField4.getText();

        // Crear la conexi√≥n a la base de datos
        PruebaCOnectar pruebaConexion = new PruebaCOnectar();
        Connection con = pruebaConexion.getConexion();

        try {
            // Crear la sentencia SQL de modificaci√≥n
            String sql = "UPDATE socios SET nombre = ?, direccion = ?, telefono = ? WHERE socio_id = ?";
            PreparedStatement pstmt = con.prepareStatement(sql);

            // Establecer los valores de los par√°metros
            pstmt.setString(1, nuevonombre);
            pstmt.setString(2, nuevodireccion);
            pstmt.setString(3, nuevotelefono);
            pstmt.setString(4, idSocio);

            // Ejecutar la sentencia de modificaci√≥n
            pstmt.executeUpdate();

            // Cerrar la conexi√≥n y el PreparedStatement
            pstmt.close();
            con.close();

            // Mostrar mensaje de √©xito
            System.out.println("Modificaci√≥n exitosa");

        } catch (Exception e) {
            // Manejar cualquier error
            JOptionPane.showMessageDialog(this, "Error al insertar en la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        }
        cargarDatos();
        limpiarCampos();

    }//GEN-LAST:event_MODIFICARActionPerformed

    private void BORRARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BORRARActionPerformed
        // TODO add your handling code here:
        // Obtener el valor del campo de texto "socios ID"
        String sociosId = jTextField1.getText();

        // Crear la conexi√≥n a la base de datos
        PruebaCOnectar pruebaConexion = new PruebaCOnectar();
        Connection con = pruebaConexion.getConexion();

        try {
            // Crear la sentencia SQL de eliminaci√≥n
            String sql = "DELETE FROM socios WHERE socio_id = ?";
            PreparedStatement pstmt = con.prepareStatement(sql);

            // Establecer el valor del par√°metro
            pstmt.setString(1, sociosId);

            // Ejecutar la sentencia de eliminaci√≥n
            int filasEliminadas = pstmt.executeUpdate();

            // Cerrar el PreparedStatement y la conexi√≥n
            pstmt.close();
            con.close();

            // Mostrar mensaje de √©xito si se elimin√≥ al menos una fila
            if (filasEliminadas > 0) {
                System.out.println("Elemento eliminado correctamente");
            } else {
                System.out.println("No se encontr√≥ ning√∫n elemento con el ID proporcionado");
            }

            // Limpiar los campos de texto y cargar nuevamente los datos en la tabla
            limpiarCampos();
            cargarDatos();

        } catch (Exception e) {
            // Manejar cualquier error
            JOptionPane.showMessageDialog(this, "Error al insertar en la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_BORRARActionPerformed

    private void ATRASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ATRASActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_ATRASActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SOCIOSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SOCIOSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SOCIOSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SOCIOSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SOCIOSO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ATRAS;
    private javax.swing.JButton BORRAR;
    private javax.swing.JButton INSERTAR;
    private javax.swing.JButton MODIFICAR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
